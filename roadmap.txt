Graphics Extractions:
	Small numbers: 5, 9
	Big letters (found in characters' statboxes)
	Big numbers: 4, 5, 6, 7
	Cards:
		Letters: A, C, and E
		Icons: Attack, Trap

Refactor:
	Encapsulate card selector in its own structure, similar to MenuState

	MatchContext should have map data, and the MapState should generate its map from that data.

Gameplay Done:
	HunterEntity type
	Multiple hunters on screen
	Movement highlight
	Card selector
	Movement card bonus
	Window panels
	Stat window
	Turn incrementation
	Deck of cards, shuffle, draw
	Stat window hand
	Rest menu action

Gameplay Features:
	Pathfinding
	Pathfinding + movement
	Click-and-drag map view
	Stat window HP bar
	Stat window name
	Card graphics
	Dice
	Combat window
	Combat logic
	Combat sprite animation
	Attack menu action
	Crates + item sprites
	Ingame crates + items
	Trap logic
	Exit, Base game mode
	Match rank screen
	Flags

Gameplay polish:
	Auto panning
	Trap animation extraction
	Trap animations
	Screen flash/fade
	Movement cursor
	Card animations
	Dice animations
	Music
	Menu sound effects
	Combat sound effects
	All map tilesets
	Original map layouts
	Combat background animation

Main menu features:
	Main menu, broker, nurse
	Character palates
	Character builder
	Character save/load
	Broker missions
	Nurse services

Bot features:
	AI action polling
	AI action candidate register
	AI profiles
	Ingame bots
	Implement personalities and bot names
	Enemy sprites
	Enemy spawning
	Gon

Online features:
	Server software
	Online gamestate sync
	Online action sending/blocking/scheduling
	Online lobby
	Online character hosting
